// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/authentication/create": {
            "post": {
                "description": "create user in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Create User",
                "parameters": [
                    {
                        "description": "For create a User",
                        "name": "requestType.UserRequestType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestType.UserRequestType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        },
        "/authentication/login": {
            "post": {
                "description": "login user for app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "For login",
                        "name": "LoginRequestType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestType.LoginType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        },
        "/cart": {
            "get": {
                "description": "get cart items by userId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Show cart items",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user carts cartItems in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Update CartItems",
                "parameters": [
                    {
                        "description": "For update a cart item",
                        "name": "requestType.CartDetailsRequestType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestType.CartDetailsRequestType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            },
            "post": {
                "description": "add product to the cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Add Product To Cart",
                "parameters": [
                    {
                        "description": "For add product to the basket",
                        "name": "requestType.CartDetailsRequestType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestType.CartDetailsRequestType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        },
        "/cart/{productId}": {
            "delete": {
                "description": "delete cart item by productId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "carts"
                ],
                "summary": "Delete a cart item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "productId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        },
        "/category": {
            "get": {
                "description": "gets all categories in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "List Categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            },
            "post": {
                "description": "admin can create categories by uploading csv file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "category"
                ],
                "summary": "Create Categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "category list",
                        "name": "csvFile",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        },
        "/order": {
            "get": {
                "description": "get users orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "List Orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            },
            "post": {
                "description": "create order in database according to users cart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create Order",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        },
        "/order/{id}": {
            "delete": {
                "description": "cancel user's order if order created has not passed 14 days",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Cancel Order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "description": "get products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "product_name",
                        "name": "product_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "price",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "stock_number",
                        "name": "stock_number",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "units_on_cart",
                        "name": "units_on_cart",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            },
            "post": {
                "description": "create product in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create Product",
                "parameters": [
                    {
                        "description": "For create a Product",
                        "name": "requestType.ProductRequestType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestType.ProductRequestType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "description": "get product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Show a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            },
            "put": {
                "description": "Update product in database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "For update a Product",
                        "name": "requestType.ProductRequestType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requestType.ProductRequestType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responseType.ResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/_type.ErrorType"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "_type.ErrorType": {
            "type": "object",
            "properties": {
                "errCode": {
                    "type": "integer"
                },
                "errMessage": {
                    "type": "string"
                }
            }
        },
        "requestType.CartDetailsRequestType": {
            "type": "object",
            "properties": {
                "productId": {
                    "type": "string"
                },
                "productQuantity": {
                    "type": "integer"
                }
            }
        },
        "requestType.LoginType": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requestType.ProductRequestType": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "productName": {
                    "type": "string"
                },
                "stockNumber": {
                    "type": "integer"
                },
                "unitsOnCart": {
                    "type": "integer"
                }
            }
        },
        "requestType.UserRequestType": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "responseType.ResponseType": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
